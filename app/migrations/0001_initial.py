# Generated by Django 5.1.3 on 2025-08-31 17:25

import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True, null=True)),
                ('tax_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TaxCurrencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=20)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaxType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tax_type', models.CharField(choices=[('free', 'Taxfree'), ('inclusive', 'Inclusive'), ('exclusive', 'Exclusive')], default='free', max_length=100)),
                ('computation_type', models.CharField(blank=True, choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], default='percentage', max_length=100, null=True)),
                ('tax_percent', models.FloatField(blank=True, null=True)),
                ('fixed_amount', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Connector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('app_id', models.PositiveIntegerField(blank=True, null=True)),
                ('app_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ConnectedApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('connector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connected_apps', to='app.connector')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_id', models.IntegerField()),
                ('invoice_number', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('invoice', 'Invoice'), ('receipt', 'Receipt'), ('credit_note', 'Credit Note')], default='invoice', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('fiscalised', 'Fiscalised'), ('failed', 'Failed')], default='pending', max_length=100)),
                ('failure_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=30)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=30)),
                ('total', models.DecimalField(decimal_places=2, max_digits=30)),
                ('payment_type', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('card_payment', 'Card Payment'), ('other', 'Other')], default='cash', max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('qr_code', models.TextField(blank=True, null=True)),
                ('sent_data', models.JSONField(blank=True, null=True)),
                ('tax_success_data', models.JSONField(blank=True, null=True)),
                ('tax_failure_data', models.JSONField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('connected_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.connectedapp')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer')),
                ('reversed_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.invoice')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.taxcurrencies')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.taxtype')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('discount', 'Discount')], default='sale', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=30)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=30)),
                ('tax', models.CharField(choices=[('free', 'Taxfree'), ('inclusive', 'Inclusive'), ('exclusive', 'Exclusive')], default='free', max_length=100)),
                ('total', models.DecimalField(decimal_places=2, max_digits=30)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoiceproducts', to='app.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='connectedapp',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.organisation'),
        ),
        migrations.CreateModel(
            name='TaxConnector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tax_id', models.PositiveIntegerField(blank=True, null=True)),
                ('tax_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ConnectedTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('organisation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.organisation')),
                ('connector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.taxconnector')),
            ],
        ),
    ]
